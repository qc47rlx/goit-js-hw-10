{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst buttonEl = document.querySelector('[data-start]');\nconst inputEl = document.querySelector('#datetime-picker');\nconst spanDaysEl = document.querySelector('[data-days]');\nconst spanHoursEl = document.querySelector('[data-hours]');\nconst spanMinutesEl = document.querySelector('[data-minutes]');\nconst spanSecondsEl = document.querySelector('[data-seconds]');\n\nbuttonEl.setAttribute('disabled', '');\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userData = selectedDates[0].getTime();\n    const data = Date.now();\n    if (userData > data) {\n      buttonEl.removeAttribute('disabled');\n      userSelectedDate = userData;\n    } else {\n      iziToast.error({\n        title: 'Error',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      buttonEl.setAttribute('disabled', '');\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nbuttonEl.addEventListener('click', () => {\n  buttonEl.setAttribute('disabled', '');\n  inputEl.setAttribute('disabled', '');\n\n  intervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    spanDaysEl.textContent = addLeadingZero(days);\n    spanHoursEl.textContent = addLeadingZero(hours);\n    spanMinutesEl.textContent = addLeadingZero(minutes);\n    spanSecondsEl.textContent = addLeadingZero(seconds);\n\n    if (diff < 1000) clearInterval(intervalId);\n  }, 1000);\n});"],"names":["buttonEl","inputEl","spanDaysEl","spanHoursEl","spanMinutesEl","spanSecondsEl","userSelectedDate","intervalId","options","selectedDates","userData","data","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","diff"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,gBAAgB,EACvDC,EAAgB,SAAS,cAAc,gBAAgB,EAE7DL,EAAS,aAAa,WAAY,EAAE,EACpC,IAAIM,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAAE,QAAO,EACnCE,EAAO,KAAK,MACdD,EAAWC,GACbX,EAAS,gBAAgB,UAAU,EACnCM,EAAmBI,IAEnBE,EAAS,MAAM,CACb,MAAO,QACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDZ,EAAS,aAAa,WAAY,EAAE,EAEvC,CACH,EAEAa,EAAUZ,EAASO,CAAO,EAE1B,SAASM,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEArB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,aAAa,WAAY,EAAE,EACpCC,EAAQ,aAAa,WAAY,EAAE,EAEnCM,EAAa,YAAY,IAAM,CAC7B,MAAMe,EAAOhB,EAAmB,KAAK,IAAG,EAClC,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAI,EAExDpB,EAAW,YAAckB,EAAeJ,CAAI,EAC5Cb,EAAY,YAAciB,EAAeH,CAAK,EAC9Cb,EAAc,YAAcgB,EAAeF,CAAO,EAClDb,EAAc,YAAce,EAAeD,CAAO,EAE9CG,EAAO,KAAM,cAAcf,CAAU,CAC1C,EAAE,GAAI,CACT,CAAC"}